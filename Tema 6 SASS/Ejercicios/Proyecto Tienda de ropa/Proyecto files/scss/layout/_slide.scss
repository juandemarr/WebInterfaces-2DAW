.slideshow{
/*posicionar nuestros slides en grid container*/
    grid-column:1 / -1;
    grid-row:2 / 3;
    position:relative;
    width:100%;
    height:80vh;

    @include response(xl){
        height:70vh;
    }

    @include response(lg){
        height:60vh;
    }

    @include response(md){
        height:50vh;
    }

    /*colocar cada slice*/
    &-slide{
        position:absolute;
        top:0;
        left:0;
        width:inherit;//equivale a poner 100 como arriba
        height:inherit;//equivale a 80 de arriba, en lugar de repetirlo se puede poner esto
        visibility:hidden;
        opacity:0;
        animation: slideshow 20s linear infinite;
        
        img{
            width:inherit;
            height:inherit;
            object-fit:cover;
        }
    }
    &-content{
        background-color:rgba(color(secondary),0.6);//sass puede traducir de hexadecimal a rga
        position:absolute;
        bottom:6rem;
        left:6rem;
        max-width:40rem;
        padding:5rem;

        @include response(lg){
            padding:2rem;
        }

        h2{
            font-size:size(xl);
            color:color(primary);
        }

        p{
            margin:6rem 0;
            font-size:size(sm);
        }
    }

}

//No recomendable por repetir c√≥digo
/*.slideshow-slide:nth-child(1){//distribuir los 20s de la animacion
    animation-delay:0s;
}
.slideshow-slide:nth-child(2){
    animation-delay:4s;
}
.slideshow-slide:nth-child(3){
    animation-delay:8s;
}
.slideshow-slide:nth-child(4){
    animation-delay:12s;
}
.slideshow-slide:nth-child(5){
    animation-delay:16s;
}*/

//la misma animacion con lista
/*$animlist:1 0s, 2 4s, 3 8s, 4 12s, 5 16s; *///los elementos de la lista pueden ser pares de valores

//@each $item in $animlist{
    //.slideshow-slide:nth-child(#{nth($item,1)}){//ese uno hace que me quede con la primera parte de 1 0s
        //animation-delay:nth($item,2);//nth es una funcion
    //}
//}

/*con un mapa*/
$animmap:(
    1: 0s,
    2: 4s,
    3: 8s,
    4: 12s,
    5: 16s
);

@each $key, $value in $animmap{
    .slideshow-slide:nth-child(#{$key}){
        animation-delay:$value;
    }
}

@keyframes slideshow{
    0%{
        visibility:hidden;
        opacity:0;
    }
    2%{
        visibility:visible;
        opacity:1;
    }
    18%{
        visbility:visible;
        opacity:1;
    }
    20%{
        visibility:hidden;
        opacity:0;
    }
    100%{
        visibility:hidden;
        opacity:0;
    }
}